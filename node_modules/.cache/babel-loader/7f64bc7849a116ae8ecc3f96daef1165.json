{"ast":null,"code":"import { combineReducers } from 'redux'; // loginMessage holds the string that will display\n// on the login screen if there's an error\n\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n\n    default:\n      return state;\n  }\n}; // registrationMessage holds the string that will display\n// on the registration screen if there's an error\n\n\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n\n    default:\n      return state;\n  }\n}; // make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\n\n\nexport default combineReducers({\n  loginMessage,\n  registrationMessage\n});","map":{"version":3,"sources":["/Users/joelburdorf/Prime/tier3/joel-solo-project/src/redux/reducers/errorsReducer.js"],"names":["combineReducers","loginMessage","state","action","type","registrationMessage"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC,C,CAEA;AACA;;AACA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,mBAAL;AACE,aAAO,EAAP;;AACF,SAAK,mBAAL;AACE,aAAO,mCAAP;;AACF,SAAK,cAAL;AACE,aAAO,2DAAP;;AACF,SAAK,sBAAL;AACE,aAAO,oDAAP;;AACF;AACE,aAAOF,KAAP;AAVJ;AAYD,CAbD,C,CAeA;AACA;;;AACA,MAAMG,mBAAmB,GAAG,CAACH,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,0BAAL;AACE,aAAO,EAAP;;AACF,SAAK,0BAAL;AACE,aAAO,iCAAP;;AACF,SAAK,qBAAL;AACE,aAAO,0EAAP;;AACF;AACE,aAAOF,KAAP;AARJ;AAUD,CAXD,C,CAaA;AACA;AACA;;;AACA,eAAeF,eAAe,CAAC;AAC7BC,EAAAA,YAD6B;AAE7BI,EAAAA;AAF6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n"]},"metadata":{},"sourceType":"module"}