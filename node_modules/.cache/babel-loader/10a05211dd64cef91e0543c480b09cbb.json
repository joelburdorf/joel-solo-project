{"ast":null,"code":"import _regeneratorRuntime from \"/Users/joelburdorf/Prime/tier3/joel-solo-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(registerUser),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(registrationSaga);\n\nimport { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios'; // worker Saga: will be fired on \"REGISTER\" actions\n\nfunction registerUser(action) {\n  return _regeneratorRuntime.wrap(function registerUser$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        _context.prev = 0;\n        _context.next = 3;\n        return put({\n          type: 'CLEAR_REGISTRATION_ERROR'\n        });\n\n      case 3:\n        _context.next = 5;\n        return axios.post('/api/user/register', action.payload);\n\n      case 5:\n        _context.next = 7;\n        return put({\n          type: 'LOGIN',\n          payload: action.payload\n        });\n\n      case 7:\n        _context.next = 9;\n        return put({\n          type: 'SET_TO_LOGIN_MODE'\n        });\n\n      case 9:\n        _context.next = 16;\n        break;\n\n      case 11:\n        _context.prev = 11;\n        _context.t0 = _context[\"catch\"](0);\n        console.log('Error with user registration:', _context.t0);\n        _context.next = 16;\n        return put({\n          type: 'REGISTRATION_FAILED'\n        });\n\n      case 16:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _marked, null, [[0, 11]]);\n}\n\nfunction registrationSaga() {\n  return _regeneratorRuntime.wrap(function registrationSaga$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        _context2.next = 2;\n        return takeLatest('REGISTER', registerUser);\n\n      case 2:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, _marked2);\n}\n\nexport default registrationSaga;","map":{"version":3,"sources":["/Users/joelburdorf/Prime/tier3/joel-solo-project/src/redux/sagas/registrationSaga.js"],"names":["registerUser","registrationSaga","put","takeLatest","axios","action","type","post","payload","console","log"],"mappings":";;oDAIUA,Y;qDAoBAC,gB;;AAxBV,SAASC,GAAT,EAAcC,UAAd,QAAgC,oBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAAUJ,YAAV,CAAuBK,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAGI,eAAMH,GAAG,CAAC;AAAEI,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAT;;AAHJ;AAAA;AAMI,eAAMF,KAAK,CAACG,IAAN,CAAW,oBAAX,EAAiCF,MAAM,CAACG,OAAxC,CAAN;;AANJ;AAAA;AASI,eAAMN,GAAG,CAAC;AAAEI,UAAAA,IAAI,EAAE,OAAR;AAAiBE,UAAAA,OAAO,EAAEH,MAAM,CAACG;AAAjC,SAAD,CAAT;;AATJ;AAAA;AAaI,eAAMN,GAAG,CAAC;AAACI,UAAAA,IAAI,EAAE;AAAP,SAAD,CAAT;;AAbJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAeMG,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AAfN;AAgBM,eAAMR,GAAG,CAAC;AAACI,UAAAA,IAAI,EAAE;AAAP,SAAD,CAAT;;AAhBN;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBA,SAAUL,gBAAV;AAAA;AAAA;AAAA;AAAA;AACE,eAAME,UAAU,CAAC,UAAD,EAAaH,YAAb,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAeC,gBAAf","sourcesContent":["import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('/api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n"]},"metadata":{},"sourceType":"module"}