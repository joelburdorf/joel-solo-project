{"ast":null,"code":"import _regeneratorRuntime from \"/Users/joelburdorf/Prime/tier3/joel-solo-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga'; // rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        _context.next = 2;\n        return all([loginSaga(), registrationSaga(), userSaga()]);\n\n      case 2:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["/Users/joelburdorf/Prime/tier3/joel-solo-project/src/redux/sagas/index.js"],"names":["rootSaga","all","loginSaga","registrationSaga","userSaga"],"mappings":";;oDAYyBA,Q;;AAZzB,SAASC,GAAT,QAAoB,oBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;;AACA,eAAe,SAAUJ,QAAV;AAAA;AAAA;AAAA;AAAA;AACb,eAAMC,GAAG,CAAC,CACRC,SAAS,EADD,EAERC,gBAAgB,EAFR,EAGRC,QAAQ,EAHA,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}