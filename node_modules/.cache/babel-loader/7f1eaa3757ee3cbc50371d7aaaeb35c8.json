{"ast":null,"code":"var _jsxFileName = \"/Users/joelburdorf/Prime/tier3/joel-solo-project/src/components/UserPage/UserPage.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton'; // this could also be written with destructuring parameters as:\n// const UserPage = ({ user }) => (\n// and then instead of `props.user.username` you could use `user.username`\n\nconst UserPage = props => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  id: \"welcome\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, \"Welcome, \", props.user.username, \"!\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, \"Your ID is: \", props.user.id), React.createElement(LogOutButton, {\n  className: \"log-in\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n})); // Instead of taking everything from state, we just want the user info.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({user}) => ({ user });\n\n\nconst mapStateToProps = state => ({\n  user: state.user\n}); // this allows us to use <App /> in index.js\n\n\nexport default connect(mapStateToProps)(UserPage);","map":{"version":3,"sources":["/Users/joelburdorf/Prime/tier3/joel-solo-project/src/components/UserPage/UserPage.js"],"names":["React","connect","LogOutButton","UserPage","props","user","username","id","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,8BAAzB,C,CAEA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAI,EAAA,EAAE,EAAC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACaA,KAAK,CAACC,IAAN,CAAWC,QADxB,MADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAgBF,KAAK,CAACC,IAAN,CAAWE,EAA3B,CAJF,EAKE,oBAAC,YAAD;AAAc,EAAA,SAAS,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,CADF,C,CAUA;AACA;AACA;;;AACA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCJ,EAAAA,IAAI,EAAEI,KAAK,CAACJ;AADoB,CAAL,CAA7B,C,CAIA;;;AACA,eAAeJ,OAAO,CAACO,eAAD,CAAP,CAAyBL,QAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\n\n// this could also be written with destructuring parameters as:\n// const UserPage = ({ user }) => (\n// and then instead of `props.user.username` you could use `user.username`\nconst UserPage = (props) => (\n  <div>\n    <h1 id=\"welcome\">\n      Welcome, { props.user.username }!\n    </h1>\n    <p>Your ID is: {props.user.id}</p>\n    <LogOutButton className=\"log-in\" />\n  </div>\n);\n\n// Instead of taking everything from state, we just want the user info.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({user}) => ({ user });\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(UserPage);\n"]},"metadata":{},"sourceType":"module"}